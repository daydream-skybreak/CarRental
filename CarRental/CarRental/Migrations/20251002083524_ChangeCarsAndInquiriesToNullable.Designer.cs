// <auto-generated />
using CarRental.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CarRental.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251002083524_ChangeCarsAndInquiriesToNullable")]
    partial class ChangeCarsAndInquiriesToNullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CarRental.Models.CarModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AdminId")
                        .HasColumnType("integer");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdminId = 1,
                            ImageUrl = "https://example.com/toyota_camry.jpg",
                            Make = "Toyota",
                            Model = "Camry",
                            Price = 50.0m,
                            Year = 2021
                        },
                        new
                        {
                            Id = 2,
                            AdminId = 1,
                            ImageUrl = "https://example.com/honda_civic.jpg",
                            Make = "Honda",
                            Model = "Civic",
                            Price = 45.0m,
                            Year = 2020
                        },
                        new
                        {
                            Id = 3,
                            AdminId = 1,
                            ImageUrl = "https://example.com/ford_mustang.jpg",
                            Make = "Ford",
                            Model = "Mustang",
                            Price = 70.0m,
                            Year = 2019
                        });
                });

            modelBuilder.Entity("CarRental.Models.InquiresModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("integer");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("UserId");

                    b.ToTable("Inquiries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 1,
                            Message = "Is this car available next weekend?",
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            CarId = 2,
                            Message = "Can I rent this car for a week?",
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            CarId = 3,
                            Message = "What is the mileage of this car?",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("CarRental.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "alice@example.com",
                            IsAdmin = true,
                            Name = "Alice Johnson",
                            Password = "Password123!"
                        },
                        new
                        {
                            Id = 2,
                            Email = "bob@example.com",
                            IsAdmin = false,
                            Name = "Bob Smith",
                            Password = "Password123!"
                        },
                        new
                        {
                            Id = 3,
                            Email = "charlie@example.com",
                            IsAdmin = false,
                            Name = "Charlie Brown",
                            Password = "Password123!"
                        });
                });

            modelBuilder.Entity("CarRental.Models.CarModel", b =>
                {
                    b.HasOne("CarRental.Models.UserModel", "Admin")
                        .WithMany("Cars")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("CarRental.Models.InquiresModel", b =>
                {
                    b.HasOne("CarRental.Models.CarModel", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRental.Models.UserModel", "User")
                        .WithMany("Inquiries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CarRental.Models.UserModel", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("Inquiries");
                });
#pragma warning restore 612, 618
        }
    }
}
